{"version":3,"sources":["Components/ContactsList/ContactsList.module.css","Components/Filter/Filter.module.css","redux/actions.js","Components/Form/Form.jsx","Components/ContactsList/ContactsList.js","Components/ContactsList/ContactsList.container.js","Components/Filter/Filter.js","Components/Filter/Filter.container.js","App.js","redux/reducers.js","redux/store.js","index.js","Components/Form/Form.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","Form","state","handleChange","event","setState","currentTarget","value","handlerSubmit","preventDefault","contacts","props","data","normalizedName","toLowerCase","duplicatedName","find","contact","message","alert","onSubmit","reset","className","styles","form","this","form_item","type","onChange","pattern","title","required","autoComplete","Component","connect","items","dispatch","actions","ContactsList","onDelete","map","contacts_text","contacts_button","onClick","getfilteredContacts","filter","normalizedFilter","includes","Filter","filter_text","filter_input","distatch","App","createReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","reducers","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e25210fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_button\":\"ContactsList_contacts_button__579PI\",\"contacts_text\":\"ContactsList_contacts_text__1ivFF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_text\":\"Filter_filter_text__MLSw5\",\"filter_input\":\"Filter_filter_input__3Eoiy\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = createAction('contacts/add', (name, number) => ({\r\n    payload: {\r\n        id: uuidv4(),\r\n        name,\r\n        number\r\n    }\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\n\r\nconst changeFilter = createAction('contacts/filter');\r\n\r\n// eslint-disable-next-line\r\nexport default {addContact, deleteContact, changeFilter}","import styles from \"./Form.module.css\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/actions';\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(actions.addContact(name, number)),\r\n});\r\n\r\nclass Form extends Component {\r\n  state = {\r\n  name: '',\r\n  number: ''\r\n  }\r\n  \r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.currentTarget.name]: event.currentTarget.value\r\n    })\r\n  };\r\n  \r\n  handlerSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const { contacts } = this.props;    \r\n    const data = this.state;\r\n    const normalizedName = data.name.toLowerCase();\r\n\r\n    const duplicatedName = contacts.find(contact => contact.name.toLowerCase() === normalizedName);\r\n    const message = `${data.name} is already in contacts`;\r\n\r\n    if (!!duplicatedName) {\r\n      alert(message)   \r\n    } else {\r\n      this.props.onSubmit(data.name, data.number);\r\n    }    \r\n\r\n    this.reset();   \r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' })\r\n  };\r\n\r\n  render() {\r\n  return ( <form className={styles.form} onSubmit={this.handlerSubmit}>\r\n      <label className={styles.form_item}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          autoComplete=\"off\" /> Name\r\n      </label>\r\n      <label className={styles.form_item}>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={this.state.number}\r\n          onChange={this.handleChange}\r\n          autoComplete=\"off\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required /> Number\r\n      </label>\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  )}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","import styles from \"./ContactsList.module.css\";\r\n\r\nconst ContactsList = ({ contacts, onDelete }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map((contact) =>\r\n      (<li key={contact.id}>\r\n        <span className={styles.contacts_text}>{contact.name}:</span>\r\n        <span className={styles.contacts_text}>{contact.number}</span>\r\n        <button type=\"button\" className={styles.contacts_button} onClick={() => onDelete(contact.id)}>Delete</button>\r\n      </li>)\r\n      )}\r\n    </ul>\r\n  )\r\n};\r\n\r\nexport default ContactsList;","import { connect } from 'react-redux';\r\nimport actions from \"../../redux/actions\";\r\nimport ContactsList from './ContactsList';\r\n\r\nconst getfilteredContacts = (contacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();  \r\n\r\n  return (\r\n    contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter))\r\n  )\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getfilteredContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDelete: id => dispatch(actions.deleteContact(id)) \r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);","import styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ handleChange, filter }) => {\r\n\r\n  return (\r\n    <label className={styles.filter_text}> Find contacts by name <br/>\r\n        <input\r\n        className={styles.filter_input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={handleChange}        \r\n        autoComplete=\"off\"/>\r\n    </label>\r\n  )\r\n}\r\n\r\nexport default Filter;","import { connect } from 'react-redux';\r\nimport actions from '../../redux/actions';\r\nimport Filter from './Filter';\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = distatch => ({\r\n  handleChange: (event) =>\r\n    distatch(actions.changeFilter(event.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","// import React, {Component} from \"react\";\nimport Form from \"./Components/Form/Form\";\nimport ContactsList from \"./Components/ContactsList/ContactsList.container\";\nimport Filter from \"./Components/Filter/Filter.container\";\n\n\nconst App = () => (\n  <>\n    <h1>Phonebook</h1>\n    <Form />\n    <h2>Contacts</h2>\n    <Filter />\n    <ContactsList />\n  </>\n);\n\n\nexport default App;\n\n// contacts: [\n  //   {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n  //   {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n  //   {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n  //   {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},    \n  // ]","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport actions from './actions';\r\n\r\nconst items = createReducer([], {  \r\n    [actions.addContact]: (state, { payload }) => [payload, ...state],\r\n    [actions.deleteContact]: (state, { payload }) => state.filter(contact => contact.id !== payload)    \r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter })","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport reducers from './reducers';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  })  \r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, reducers),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line\r\nexport default { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3aOHX\",\"form_item\":\"Form_form_item__BCVho\"};"],"sourceRoot":""}