{"version":3,"sources":["Components/Form/Form.module.css","Components/ContactsList/ContactsList.module.css","Components/Filter/Filter.module.css","redux/actions.js","redux/operations.js","Components/Form/Form.jsx","redux/selectors.js","Components/ContactsList/ContactsList.js","Components/ContactsList/ContactsList.container.js","Components/Filter/Filter.js","Components/Filter/Filter.container.js","App.js","redux/reducers.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","dispatch","a","actions","get","data","name","number","contact","post","id","delete","Form","state","handleChange","event","setState","currentTarget","value","handlerSubmit","preventDefault","contacts","props","normalizedName","toLowerCase","duplicatedName","find","message","alert","onSubmit","reset","className","styles","form","this","form_item","type","onChange","pattern","title","required","autoComplete","Component","connect","items","operations","getContacts","getFilter","filter","getLoading","loading","getError","error","getfilteredContacts","createSelector","normalizedFilter","includes","ContactsList","onDelete","map","contacts_text","contacts_button","onClick","selectors","Filter","filter_text","filter_input","distatch","isLoadingContacts","isError","fetchContactsOnMount","useEffect","createReducer","_","payload","sort","b","localeCompare","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","reducers","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d05d040e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3aOHX\",\"form_item\":\"Form_form_item__BCVho\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_button\":\"ContactsList_contacts_button__579PI\",\"contacts_text\":\"ContactsList_contacts_text__1ivFF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_text\":\"Filter_filter_text__MLSw5\",\"filter_input\":\"Filter_filter_input__3Eoiy\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nconst addContactRequest = createAction('contacts/addContactRequest');\r\nconst addContactSuccess = createAction('contacts/addContactSuccess');\r\nconst addContactError = createAction('contacts/addContactError');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nconst deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nconst changeFilter = createAction('contacts/change-filter');\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n\r\n  changeFilter,\r\n};","import axios from 'axios';\r\nimport actions from './actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(actions.fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(actions.fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(actions.fetchContactsError(error));\r\n  }\r\n};\r\n\r\nconst addContact = (name, number) => async dispatch => {\r\n  const contact = { name, number };\r\n\r\n  dispatch(actions.addContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/contacts', contact);\r\n\r\n    dispatch(actions.addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(actions.addContactError(error));\r\n  }\r\n};\r\n\r\nconst deleteContact = id => async dispatch => {\r\n  dispatch(actions.deleteContactRequest());\r\n\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n\r\n    dispatch(actions.deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(actions.deleteContactError(error));\r\n  }\r\n};\r\n\r\n// eslint-disable-next-line\r\nexport default { fetchContacts, addContact, deleteContact };","import styles from \"./Form.module.css\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\n// import actions from '../../redux/actions';\r\nimport operations from '../../redux/operations'\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(operations.addContact(name, number)),\r\n});\r\n\r\nclass Form extends Component {\r\n  state = {\r\n  name: '',\r\n  number: ''\r\n  }\r\n  \r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.currentTarget.name]: event.currentTarget.value\r\n    })\r\n  };\r\n  \r\n  handlerSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const { contacts } = this.props;    \r\n    const data = this.state;\r\n    const normalizedName = data.name.toLowerCase();\r\n\r\n    const duplicatedName = contacts.find(contact => contact.name.toLowerCase() === normalizedName);\r\n    const message = `${data.name} is already in contacts`;\r\n\r\n    if (!!duplicatedName) {\r\n      alert(message)   \r\n    } else {\r\n      this.props.onSubmit(data.name, data.number);\r\n    }    \r\n\r\n    this.reset();   \r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' })\r\n  };\r\n\r\n  render() {\r\n  return ( <form className={styles.form} onSubmit={this.handlerSubmit}>\r\n      <label className={styles.form_item}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          autoComplete=\"off\" /> Name\r\n      </label>\r\n      <label className={styles.form_item}>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={this.state.number}\r\n          onChange={this.handleChange}\r\n          autoComplete=\"off\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required /> Number\r\n      </label>\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  )}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts.items;\r\nconst getFilter = state => state.contacts.filter;\r\nconst getLoading = state => state.contacts.loading;\r\nconst getError = state => state.contacts.error;\r\n\r\nconst getfilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  getContacts,\r\n  getFilter,\r\n  getLoading,\r\n  getError,\r\n  getfilteredContacts\r\n}","import styles from \"./ContactsList.module.css\";\r\n\r\nconst ContactsList = ({ contacts, onDelete }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map((contact) =>\r\n      (<li key={contact.id}>\r\n        <span className={styles.contacts_text}>{contact.name}:</span>\r\n        <span className={styles.contacts_text}>{contact.number}</span>\r\n        <button type=\"button\" className={styles.contacts_button} onClick={() => onDelete(contact.id)}>Delete</button>\r\n      </li>)\r\n      )}\r\n    </ul>\r\n  )\r\n};\r\n\r\nexport default ContactsList;","import { connect } from 'react-redux';\r\nimport operations from \"../../redux/operations\";\r\nimport selectors from '../../redux/selectors';\r\nimport ContactsList from './ContactsList';\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: selectors.getfilteredContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDelete: id => dispatch(operations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);","import styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ handleChange, filter }) => {\r\n\r\n  return (\r\n    <label className={styles.filter_text}> Find contacts by name <br/>\r\n        <input\r\n        className={styles.filter_input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={handleChange}        \r\n        autoComplete=\"off\"/>\r\n    </label>\r\n  )\r\n}\r\n\r\nexport default Filter;","import { connect } from 'react-redux';\r\nimport actions from '../../redux/actions';\r\nimport selectors from '../../redux/selectors';\r\nimport Filter from './Filter';\r\n\r\n// const mapStateToProps = state => ({\r\n//   value: state.contacts.filter,\r\n// });\r\n\r\nconst mapStateToProps = state => ({\r\n  value: selectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = distatch => ({\r\n  handleChange: (event) =>\r\n    distatch(actions.changeFilter(event.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Form from \"./Components/Form/Form\";\nimport ContactsList from \"./Components/ContactsList/ContactsList.container\";\nimport Filter from \"./Components/Filter/Filter.container\";\n\nimport operations from './redux/operations';\nimport selectors from './redux/selectors';\n\n\n\nconst App = ({ isLoadingContacts, fetchContactsOnMount }) => {\n\n  useEffect(() => {\n    fetchContactsOnMount();\n  }, [fetchContactsOnMount]);\n\n  return (\n  <>\n    <h1>Phonebook</h1>\n    <Form />\n    <h2>Contacts</h2>\n    <Filter />\n    <ContactsList />\n    {isLoadingContacts && 'Loading...'}\n  </>)\n};\n\nconst mapStateToProps = state => ({\n  isLoadingContacts: selectors.getLoading(state),\n  isError: selectors.getError(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContactsOnMount: () => dispatch(operations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport actions from './actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.fetchContactsSuccess]: (_, { payload }) =>\r\n    payload.sort((a, b) => a.name.localeCompare(b.name)),\r\n  [actions.addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n  [actions.deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [actions.fetchContactsRequest]: () => true,\r\n  [actions.fetchContactsSuccess]: () => false,\r\n  [actions.fetchContactsError]: () => false,\r\n\r\n  [actions.addContactRequest]: () => true,\r\n  [actions.addContactSuccess]: () => false,\r\n  [actions.addContactError]: () => false,\r\n\r\n  [actions.deleteContactRequest]: () => true,\r\n  [actions.deleteContactSuccess]: () => false,\r\n  [actions.deleteContactError]: () => false,\r\n});\r\n\r\n// Создание редюсера обработки ошибок\r\nconst error = createReducer(null, {\r\n  [actions.fetchContactsError]: (_, { payload }) => payload,\r\n  [actions.addContactError]: (_, { payload }) => payload,\r\n  [actions.deleteContactError]: (_, { payload }) => payload,\r\n\r\n  [actions.fetchContactsRequest]: () => null,\r\n  [actions.fetchContactsSuccess]: () => null,\r\n\r\n  [actions.addContactRequest]: () => null,\r\n  [actions.addContactSuccess]: () => null,\r\n\r\n  [actions.deleteContactRequest]: () => null,\r\n  [actions.deleteContactSuccess]: () => null,\r\n});\r\n\r\n// Экспорт всех редюсеров через комбайн\r\nexport default combineReducers({ items, filter, loading, error });","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport reducers from './reducers';\r\nimport {  \r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  })  \r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts:  reducers,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// eslint-disable-next-line\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>      \n      <App />      \n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}